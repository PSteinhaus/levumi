<nav class="navbar">
  <p class="navbar-brand"><%= "Klasse #{@measurement.assessment.group.name}: Schüler: #{@student.name}: #{@measurement.assessment.test.short_name} bis zum #{@measurement.date.to_date.strftime("%d.%m.%Y")}" %></p>
</nav>
<audio id="itemAudio"></audio>
</br>
<!-- Textcontent on page-->
<div align="center">
  <p style="font-family: 'fibel_nordregular'; font-size:96px" id="itemText" class="text-center">
    Test
  </p>
  <br/>
  <br/>
  <br/>
</div>
<!-- Loading bar for the audiodata-->
<div id="myProgress" style="width: 100%;height: 90px; background-color: #dddd" >
  <div id="myBar" style="width: 0%; background-color: #4cae4c; height: 90px"></div>
</div>
</br>

<div align="center"><img src="" id="resultReaction"></div>
<!-- Input field for answers-->
<div align="center">
  <p><input style="font-family: 'fibel_nordregular'; font-size:96px" id="itemAnswer" type="text" class="text-center" placeholder="Test" align="middle">
    <br/>
    <br/>
    <br/>
  </p>
</div>
<!-- Shows current "special" keyboard controll options-->
<div align="center">
  <footer>
    <table id="testField" align="center">
      <tr>
        <th><div style="font-family: 'fibel_nordregular';font-size:60px" id="repeat">Nochmal anhören: <span><img style="width: 50px" src='/assets/Tastatur_PfeilLinks.png'/></span> /&nbsp;&nbsp;</div></th>
        <th><div style="font-family: 'fibel_nordregular';font-size:60px" id="reSound"> Ton nochmal abspielen: <span><img style="width: 50px" src='/assets/Tastatur_PfeilOben.png'/></span> /&nbsp;&nbsp;</div></th>
        <th><div style="font-family: 'fibel_nordregular';font-size:60px" id="forward">Weiter: <span><img style="width: 50px" src='/assets/Tastatur_EingabetasteAlleine.png'/></span></div></th>
      </tr>
      <tr>
        <th colspan="3" ><div align="center" style="font-family: 'fibel_nordregular';font-size:60px" id="startTest"> Test starten: <span><img style="width: 50px" src='/assets/Tastatur_EingabetasteAlleine.png'/></span></div></th>
      </tr>
    </table>

  </footer>
</div>
<br/>
<br/>
<!-- Needed for hack, url_for not possible in script area-->
<div>
    <%= link_to url_for(controller: 'frontend') do%><button id="closeButton"></button><% end %>
</div>



<script>
  /*Initialization of variable*/
  var currentStudent = -1;
  var currentResult = "";
  currentStudent = <%=@result.id%>;
  var preparation = true;
  var currentItemIndex = -1;
  var timeoutId = -1;
  var currentTimes = "";
  var stopwatch = null;
  var timedout=false;
  var endTest = false;
  var introRdy = true;
  var currentIntroItem = -1;
  var levumiTalks = '<img style="float: right; width: 250px " id="pic" src="/assets/Levumi-jubelt.gif"/>';

  var testSize = 0;
  /*Hash of all used items*/
  var itemData = {
  <% @measurement.assessment.test.items.each do |i| %>
  <%= i.id%>: "<%= i.itemtext%>",
  <%end %>
  };
  /*Hash of all used audios*/
  var itemDataSound = {
  <% @measurement.assessment.test.items.each do |i| %>
  <%= i.id%>: "<%= i.audiopath%>",
  <%end %>
  };
  /*Hash of old results*/
  var lastResults = {
  <% @measurement.results.each do |r| %>
  <%= r.id%>: <%= r.getPriorResult%>,
  <% end %>
  };
  /*Array of items from current result(order)*/
  var studentData = [
      <%@result.items.each do |i|%>
      <%=i%>,
      <%end%>];
  /*Array of introtexts*/
  var introData = [
      "„Hallo, ich bin Levumi, heute möchte ich gerne wissen, wie gut du schon" +
      " schreiben kannst. Einige Wörter sind leicht, " +
      "andere Wörter sind schwer. Bitte konzentriere dich und schreibe so gut, wie du kannst! " +
      "Bitte drücke jetzt irgendeine Taste auf der Tastatur, damit du beginnen kannst“",
      "„Zuerst lese ich dir einen Satz vor. Danach diktiere ich dir das " +
      "Wort aus dem Satz, dass du schreiben sollst. Dann schreibst du das" +
      " Wort auf der Tastatur.“",
      "„Wenn du ein Wort falsch geschrieben hast, kannst du die Löschtaste benutzen und die Buchstaben löschen," +
      " damit du das Wort noch einmal schreiben kannst. Wenn du das Wort nicht verstanden hast, drücke " +
      "die linke Pfeiltaste, dann lese ich dir noch einmal vor, was du schreiben sollst. " +
      "Achte ganz genau darauf, ob ein Wort groß oder klein geschrieben wird.“"

  ];
  /*Array of introaudios*/
  var introAudio =["/assets/Anweisungen/15_Hallo.mp3",
                   "/assets/Anweisungen/15_Erklärung.mp3",
                   "/assets/Anweisungen/16_ErklärungTeilB.mp3",
                   "/assets/Anweisungen/19_ich_beginne.mp3"

  ];
  /*Changes content of html-elements for "preparation-page"*/
  function prepareTest() {
      $('#itemText').css('font-size', 96).html("Test");
      $('#itemAnswer').attr('maxlength',6).attr('type', 'show').val('');
      var fileName = "/assets/Test.mp3";
      $("#itemAudio").attr("src",fileName).trigger('play');
      $('#repeat').html("Schrift größer: <span><img style='width: 50px' src='/assets/Tastatur_PfeilLinks.png'/></span> / &nbsp;").show();
      $('#forward').html("Schrift kleiner: <span><img style='width: 50px' src='/assets/Tastatur_PfeilRechts.png'/></span>").show();
      $('#startTest').show();
      $('#reSound').show();
      $('#myProgress').hide();


  }
  /*Change content of html-elements for intro*/
  function intro(){
      $('#startTest').hide();
      $('#reSound').hide();
      $('#repeat').html("Nochmal anhören:  <span><img style='width: 50px' src='/assets/Tastatur_PfeilLinks.png'/></span> / &nbsp;").show();
      $('#forward').html("Weiter <span><img style='width: 50px' src='/assets/Tastatur_EingabetasteAlleine.png'/></span>").show();
      preparation = false;
      $('#itemText').css('font-size', 60);
      $('#itemAnswer').attr('placeholder', '').attr('type', 'hidden');
      nextIntroItem();

  }
  /*Work through introData, change content of html-elements with element of currentIntroItem*/
  function nextIntroItem() {
      currentIntroItem++;
      if(currentIntroItem<introData.length){
          $('#itemText').html(introData[currentIntroItem]).append(levumiTalks);
          var fileName = "/assets/".concat(introAudio[currentItemIndex]);
          $("#itemAudio").attr("src",introAudio[currentIntroItem]).trigger('play');
      }
      else if(currentIntroItem<introAudio.length) {
          $('#itemText').html("„Ich beginne nun dir die Wörter zu diktieren:“").append(levumiTalks);
          var fileName = "/assets/".concat(introAudio[currentItemIndex]);
          $("#itemAudio").attr("src",introAudio[currentIntroItem]).trigger('play');
          $("#itemAnswer").attr('type', 'hidden');
      }
      else {
          startTest();
      }
  }

  /*Begin testphase*/
  function startTest() {
      introRdy = false;
      $('#itemText').hide();
      $('#itemAnswer').attr('type', 'show').focus();
      currentItemIndex = -1;
      currentResult = "";
      currentTimes = "";
      nextItem();
      if (timeoutId != -1) {
          window.clearTimeout(timeoutId);
      }
      timeoutId = window.setTimeout(timedOut, <%= @measurement.assessment.test.time*1000 %> + 500);
  }
  /*Set flag for time-out, no aprupt end*/
  function timedOut() {
      timedout =true;
  }
  /*Shows the next item and changes content of html-elements*/
  function nextItem() {
      currentItemIndex++;
      if (currentItemIndex < studentData.length) {
          if (timedout)
              stopTest(timedout);
          else {
              var length = itemData[studentData[currentItemIndex]].length;
              $('#itemAnswer').attr('maxlength',(length+length/2)).focus();
              var fileName = "/assets/".concat(itemDataSound[studentData[currentItemIndex]]);
              $("#itemAudio").attr("src",fileName).trigger('play');
              stopwatch = new Date();
          }
      }
      else
          stopTest(false);
  }
  /*What happens when test should stop*/
  function stopTest(timeout) {
      if (timeoutId != -1) {
          window.clearTimeout(timeoutId);
          timeoutId = -1;
      }
      var dict = {};
      dict["authenticty_token"] = "<%= Rails.configuration.secret_token%>";
      dict["results"] = currentStudent + "#" + currentResult.substr(0, currentResult.length-1);
      //semd data
      $.ajax({
          type: "PUT",
          url: "<%= user_group_assessment_measurement_results_path(@student.group.user, @student.group, @measurement.assessment, @measurement)%>",
          data: dict
      });
      //show content of last page
      if (lastResults[currentStudent] < currentResult.split("1").length)
          $('#resultReaction').attr('src', '/assets/Levumi-jubelt.gif').width(250);
      else
          $('#resultReaction').attr('src', '/assets/Levumi-weiterlesen.gif').width(250);
      $('#itemText').css('font-size', 60).html("").show();
      $('#itemAnswer').attr('type', 'hidden');
      endTest =true;
      if (timeout) {
          $('#itemText').html("Deine Zeit ist leider abgelaufen.<br/>Die Testergebnisse wurden gespeichert! <br/>Zum Beenden des Testes drücke bitte die Eingabetaste.");
          $("#itemAudio").attr("src","/assets/Anweisungen/20_geschafft.mp3").trigger('play');
      }
      else {
          $('#itemText').html("Toll jetzt hast du es geschafft.<br/>Die Testergebnisse wurden gespeichert!<br/>Zum Beenden des Testes drücke bitte die Eingabetaste.");
          $("#itemAudio").attr("src","/assets/Anweisungen/20_geschafft.mp3").trigger('play');
      }
  }
  /*Adjust size or change local result*/
  function iButtonClick() {
      if (preparation) {
          curSize = parseInt($('#itemText').css('font-size')) - 6;
          $('#itemText').css('font-size', curSize);
          $('#itemAnswer').css('font-size',curSize)
      }
      else if((!preparation)&&introRdy){
          nextIntroItem();
      }
      /* + 1 when word was correct
         + 0  when word was incorrect
       */
      else {
          var temp = document.getElementById("itemAnswer").value;
          if(itemData[studentData[currentItemIndex]]==temp){
              stopwatch = new Date() - stopwatch;
              currentTimes = currentTimes + stopwatch + ",";
              currentResult = currentResult + "1,";
              document.getElementById("itemAnswer").value = "";
              nextItem();
          }
          else {
              stopwatch = new Date() - stopwatch;
              currentTimes = currentTimes + stopwatch + ",";
              currentResult = currentResult + "0,";
              document.getElementById("itemAnswer").value = "";
              nextItem();
          }
      }
  }
  /*Adjust size or repeat sound*/
  function cButtonClick() {
      if (preparation) {
          curSize=parseInt($('#itemText').css('font-size')) + 6;
          $('#itemText').css('font-size', curSize);
          $('#itemAnswer').css('font-size',curSize)
      }
      else {
          var h = document.getElementById("itemAudio");
          h.pause();
          h.currentTime = 0;
          h.play();
      }

  }
  /*repeat sound*/
  function rButtonClick() {
      var h = document.getElementById("itemAudio");
      h.pause();
      h.currentTime = 0;
      h.play();
  }
  /*start Test*/
  function sButtonClick() {
      if (preparation) {
          testSize = parseInt($('#itemText').css('font-size'));
          intro();
      }
  }
  /*Clear Inputfield*/
  function clearInput() {
      $('#itemAnswer').val('');
  }

  /*Turn off keyboard-arrows in input field */
  $('#itemAnswer').keydown(function(e){
      var key = e.charCode || e.keyCode;
      if (key == 37||key == 38||key == 39||key == 40||key == 32||key ==27) {
          // enter key do nothing
          e.preventDefault();
      }
      else {

      }
  });

  /*Keyboard controll in diffrent phases*/
  $(window).keyup(function(event) {
      if(currentIntroItem ==0) {
          if(event.keyCode == 37){
              rButtonClick();
          }
          else {
              iButtonClick();
          }
      }
      else {
        /*last page*/
          if (endTest) {
              if (event.keyCode == 13) {
                  $(window).unbind('keyup');
                  window.clearTimeout(timeoutId);
                  $('#closeButton').click();
              }
              else {

              }
          }
          /*during preparation*/
          else if (preparation) {
              switch (event.keyCode) {
                  case 37:
                      cButtonClick();
                      break;
                  case 38:
                      rButtonClick();
                      break;
                  case 39:
                      iButtonClick();
                      break;
                  case 13:
                      sButtonClick();
                      break;
              }
          }
          /*during introphase and testphase*/
          else {
            /*during testphase*/
              switch (event.keyCode) {
                  case 13:
                      iButtonClick();
                      break;
                  case 32:
                      clearInput();
                      break;
                  case 37:
                      cButtonClick();
                      break;
              }
          }
      }
  });

  //Hide Html-elements during preload
  $('#itemText').css('font_size', 90).html('Daten werden vorbereitet');
  $('#itemAnswer').attr('type', 'hidden');
  $('#closeButton').hide();
  $('#forward').hide();
  $('#startTest').hide();
  $('#reSound').hide();

  /*Variable for preload*/
  var progress = 0;
  var loaded = 0;
  var soundLength = studentData.length;
  var introAudioLength = introAudio.length;
  // start preloading all the intro audio files
  for (var i in studentData) {
      preloadAudio(itemDataSound[studentData[i]]);

  }

  function preloadAudio(url) {
      var audio = new Audio();
      // once this file loads, it will call loadedAudio()
      // the file will be kept by the browser as cache
      var completeUrl = "/assets/".concat(url);
      audio.addEventListener('canplaythrough', loadedAudio, false);
      audio.src = completeUrl;


  }

  function loadedAudio() {
      // this will be called every time an audio file is loaded
      // we keep track of the loaded files vs the requested files

      loaded++;
      progress = ((loaded *100) / (soundLength+introAudioLength));
      var elem = document.getElementById("myBar");
      elem.style.width = progress +'%';
      if (loaded == soundLength){
          // all have loaded do something
          preloadIntro();

      }
  }
  // we start preloading all the test audio files
  function preloadIntro() {
      for (var i in introAudio) {
          preloadAudioIntro(introAudio[i]);

      }
  }

  function preloadAudioIntro(url) {
      var audio = new Audio();
      // once this file loads, it will call loadedAudioIntro()
      // the file will be kept by the browser as cache
      audio.addEventListener('canplaythrough', loadedAudioIntro, false);
      audio.src = url;


  }

  function loadedAudioIntro() {
      // this will be called every time an audio file is loaded
      // we keep track of the loaded files vs the requested files
      loaded++;
      progress = ((loaded *100) / (soundLength+introAudioLength));
      var elem = document.getElementById("myBar");
      elem.style.width = progress +'%';
      if (loaded == (soundLength+introAudioLength)){
          // all have loaded do something
          prepareTest();

      }
  }

</script>