<!--
<div id="alert">
  <div class="alert alert-info alert-dismissible">
    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <p id="notice">Du hast hier die Gelegenheit, die Schriftgröße für den Test individuell anzupassen und die Lautstärke zu überprüfen.
      <br/> Die Zeit von < @measurement.assessment.test.time %> Sekunden läuft dann kurz nach dem Klick auf "Test starten" los!</p>
  </div>
</div>
nicht so gut da Schüler aus dem feld springen, wenn das drin sein soll close event abfangen-->
<nav class="navbar">
  <p class="navbar-brand"><%= "Klasse #{@measurement.assessment.group.name}: Schüler: #{@student.name}: #{@measurement.assessment.test.short_name} bis zum #{@measurement.date.to_date.strftime("%d.%m.%Y")}" %></p>
</nav>
<audio id="itemAudio"></audio>
</br>
<div align="center">
  <p style="font-family: 'fibel_nordregular'; font-size:96px" id="itemText" class="text-center">
    Test
  </p>
  <br/>
  <br/>
  <br/>
</div>
<div id="myProgress" style="width: 100%;height: 90px; background-color: #dddd" >
  <div id="myBar" style="width: 0%; background-color: #4cae4c; height: 90px"></div>
</div>
</br>
<div align="center"><img src="" id="resultReaction"></div>
<div align="center">
  <p><input style="font-family: 'fibel_nordregular'; font-size:96px" id="itemAnswer" type="text" class="text-center" placeholder="Test" align="middle">
    <br/>
    <br/>
    <br/>
  </p>
</div>

<div align="center">
  <footer>
    <button id="cButton" type="button" class="btn btn-info btn-lg no-click" >Nochmal</button>
    <button id="sButton" type="button" class="btn btn-default disabled">Test starten(Eingabetaste)</button>
    <button id="iButton" type="button" class="btn btn-success btn-lg no-click">Weiter</button>
  </footer>
</div>
<br/>
<br/>
<div class="row">
  <div class="col-lg-12">
    <%= link_to url_for(controller: 'frontend') do%><button id="closeButton" type="button" class="btn btn-block btn-warning btn-lg" >Messung abbrechen: <span><img src='/assets/Esc.png'/></span></button><% end %>
  </div>
</div>



<script>
  /*Initialisierung der Variablen für den Testablauf*/
  var currentStudent = -1;
  var currentResult = "";
  currentStudent = <%=@result.id%>;
  var preparation = true;
  var currentItemIndex = -1;
  var timeoutId = -1;
  var currentTimes = "";
  var stopwatch = null;
  var timedout=false;
  var endTest = false;
  var introRdy = true;
  var currentIntroItem = -1;
  var levumiTalks = '<img style="float: right; width: 250px " id="pic" src="/assets/Levumi-jubelt.gif"/>';

  var testSize = 0;
  /*Liste aller Items, wleche zum Test gehören*/
  var itemData = {
  <% @measurement.assessment.test.items.each do |i| %>
  <%= i.id%>: "<%= i.itemtext%>",
  <%end %>
  };
  /*Liste aller Items, wleche zum Test gehören*/
  var itemDataSound = {
  <% @measurement.assessment.test.items.each do |i| %>
  <%= i.id%>: "<%= i.data%>",
  <%end %>
  };
  var lastResults = {
  <% @measurement.results.each do |r| %>
  <%= r.id%>: <%= r.getPriorResult%>,
  <% end %>
  };
  /*Liste der Ids, der Items in der Reihenfolge, wie sie in Result vorkommen*/
  var studentData = [
      <%@result.items.each do |i|%>
      <%=i%>,
      <%end%>];

  var introData = [
      "„Hallo, heute möchte ich gerne wissen, wie gut du schon schreiben kannst." +
      " Einige Wörter sind leicht, andere Wörter sind schwer. Bitte konzentriere dich und schreibe so gut, wie du kannst!" +
      " Bitte drücke jetzt irgendeine Taste auf der Tastatur, damit du beginnen kannst.“",
      "„Jetzt machen wir zwei Beispiele, damit du weißt, was du aufschreiben sollst. Zuerst lese ich dir einen Satz vor." +
      " Danach diktiere ich dir das Wort aus dem Satz, welches du schreiben sollst. Dann schreibst du das Wort auf der Tastatur.“",
      "„Wenn du ein Wort falsch geschrieben hast, kannst du die Leertaste benutzen und die Buchstaben löschen," +
      " damit du das Wort noch einmal schreiben kannst. Wenn du das Wort nicht verstanden hast, drücke die linke Pfeiltaste , dann lese" +
      " ich dir den Satz und das Wort vor, das du schreiben sollst. Achte ganz genau darauf, ob ein Wort groß oder klein geschrieben wird.“"

  ];
  var introAudio =["/assets/Anweisungen/15_Hallo.mp3",
                   "/assets/Anweisungen/16_ErklärungTeilA.mp3",
                   "/assets/Anweisungen/16_ErklärungTeilB.mp3",
                   "/assets/Anweisungen/19_ich_beginne.mp3"

  ];
  /*was kann sollte noch vor Testbeginn gemacht/angezeigt werden
   * TODO: Bild und andere Kleinigkeiten. siehe auch Diktiertest*/
  function prepareTest() {
      $('#itemText').css('font-size', 96).html("Test");
      $('#itemAnswer').attr('maxlength',6).attr('type', 'show').val('');
      var fileName = "/assets/Test.mp3";
      $("#itemAudio").attr("src",fileName).trigger('play');
      $('#cButton').html("Schrift größer: <span class='glyphicon glyphicon-arrow-left'/>");
      $('#iButton').html("Schrift kleiner: <span class='glyphicon glyphicon-arrow-right'/>");
      $('#sButton').html("Test starten!: <span><img src='/assets/enter-arrow_icon.png'/></span>");
      setButtons(true);
      $('#myProgress').hide();


  }
  function intro(){
      preparation = false;
      $('#itemText').css('font-size', 60);
      $('#cButton').height(32).html("Nochmal anhören: <span class='glyphicon glyphicon-arrow-left'/>");
      $('#iButton').width(170).html("Weiter: <span><img src='/assets/enter-arrow_icon.png'/></span>");
      $('#sButton').hide();
      $('#itemAnswer').attr('placeholder', '').attr('type', 'hidden');
      nextIntroItem();
      setButtons(true);

  }

  function nextIntroItem() {
      currentIntroItem++;
      if(currentIntroItem<introData.length){
          $('#itemText').html(introData[currentIntroItem]).append(levumiTalks);
          var fileName = "/assets/".concat(introAudio[currentItemIndex]);
          $("#itemAudio").attr("src",introAudio[currentIntroItem]).trigger('play');
      }
      else if(currentIntroItem<introAudio.length) {
          $('#itemText').html("„Ich beginne nun dir die Wörter zu diktieren:“").append(levumiTalks);
          var fileName = "/assets/".concat(introAudio[currentItemIndex]);
          $("#itemAudio").attr("src",introAudio[currentIntroItem]).trigger('play');
          $("#itemAnswer").attr('type', 'hidden');
      }
      else {
          startTest();
      }
  }

  /*Testphase beginnt*/
  function startTest() {
      introRdy = false;
      $('#itemText').hide();
      setButtons(true);
      $('#itemAnswer').attr('type', 'show').focus();
      currentItemIndex = -1;
      currentResult = "";
      currentTimes = "";
      nextItem();
      if (timeoutId != -1) {
          window.clearTimeout(timeoutId);
      }
      timeoutId = window.setTimeout(timedOut, <%= @measurement.assessment.test.time*1000 %> + 500);
  }
  function timedOut() {
      timedout =true;
  }
  /*Nächstes Item anzeigen und seine Daten laden*/
  function nextItem() {
      currentItemIndex++;
      if (currentItemIndex < studentData.length) {
          if (timedout)
              stopTest(timedout);
          else {
              var length = itemData[studentData[currentItemIndex]].length;
              $('#itemAnswer').attr('maxlength',(length+length/2)).focus();
              var fileName = "/assets/".concat(itemDataSound[studentData[currentItemIndex]]);
              $("#itemAudio").attr("src",fileName).trigger('play');
              stopwatch = new Date();
          }
      }
      else
          stopTest(false);
  }
  /*Wenn Zeit abgelaufen oder alle Wörter durchgelaufen test beenden*/
  function stopTest(timeout) {
      if (timeoutId != -1) {
          window.clearTimeout(timeoutId);
          timeoutId = -1;
      }
      var dict = {};
      dict["authenticty_token"] = "<%= Rails.configuration.secret_token%>";
      dict["results"] = currentStudent + "#" + currentResult.substr(0, currentResult.length-1);
      $.ajax({
          type: "PUT",
          url: "<%= user_group_assessment_measurement_results_path(@student.group.user, @student.group, @measurement.assessment, @measurement)%>",
          data: dict
      });
      if (lastResults[currentStudent] < currentResult.split("1").length)
          $('#resultReaction').attr('src', '/assets/Levumi-jubelt.gif').width(250);
      else
          $('#resultReaction').attr('src', '/assets/Levumi-weiterlesen.gif').width(250);
      $('#itemText').css('font-size', 60).html("").show();
      $('#itemAnswer').attr('type', 'hidden');
      endTest =true;
      if (timeout) {
          $('#itemText').html("Deine Zeit ist leider abgelaufen.<br/>Die Testergebnisse wurden gespeichert! <br/>Zum Beenden des Testes drücke bitte die Escapetaste.");
          $("#itemAudio").attr("src","/assets/Anweisungen/20_geschafft.mp3").trigger('play');
      }
      else {
          $('#itemText').html("Alle Items beantwortet.<br/>Die Testergebnisse wurden gespeichert!<br/>Zum Beenden des Testes drücke bitte die Escapetaste.");
          $("#itemAudio").attr("src","/assets/Anweisungen/20_geschafft.mp3").trigger('play');
      }
      setButtons(false);
  }



  function iButtonClick() {
      if (!$('#iButton').hasClass("disabled")) {
          if (preparation) {
              curSize = parseInt($('#itemText').css('font-size')) - 6;
              $('#itemText').css('font-size', curSize);
              $('#itemAnswer').css('font-size',curSize)
          }
          else if((!preparation)&&introRdy){
              nextIntroItem();
          }
          /*Wenn Wörter abgefragt werden:
           - Wennh richtig eingegeben: - 1 Punkt dazu
           - Wenn falsch eingegeben  : - Keinen Punkt dazu
           Dann: - inputfeld leeren
           -nächstes Wort auswählen

           */
          else {
              var temp = document.getElementById("itemAnswer").value;
              if(itemData[studentData[currentItemIndex]]==temp){
                  stopwatch = new Date() - stopwatch;
                  currentTimes = currentTimes + stopwatch + ",";
                  currentResult = currentResult + "1,";
                  document.getElementById("itemAnswer").value = "";
                  nextItem();
              }
              else {
                  stopwatch = new Date() - stopwatch;
                  currentTimes = currentTimes + stopwatch + ",";
                  currentResult = currentResult + "0,";
                  document.getElementById("itemAnswer").value = "";
                  nextItem();
              }
          }
      }
  }

  function cButtonClick() {

      if (!$('#cButton').hasClass("disabled")) {
          if (preparation) {
              curSize=parseInt($('#itemText').css('font-size')) + 6;
              $('#itemText').css('font-size', curSize);
              $('#itemAnswer').css('font-size',curSize)
          }
          else {
              var h = document.getElementById("itemAudio");
              h.pause();
              h.currentTime = 0;
              h.play();
          }
      }
  }

  function setButtons(enabled) {
      if (enabled) {
          if (preparation) {
              $('#cButton').removeClass("disabled");
              $('#cButton').removeClass("btn-info");
              $('#sButton').removeClass("disabled");
              $('#sButton').addClass("btn-success");
              $('#iButton').removeClass("disabled");
              $('#iButton').removeClass("btn-success");
              $('#sButton').show();
              $('#iButton').show();
              $('#cButton').show();
          }
          else {
              $('#cButton').removeClass("disabled");
              $('#cButton').addClass("btn-info");
              $('#iButton').removeClass("disabled");
              $('#iButton').addClass("btn-success");
              $('#sButton').addClass("disabled");
              $('#sButton').removeClass("btn-success");
          }
      }
      else {
          $('#cButton').addClass("disabled");
          $('#cButton').removeClass("btn-info");
          $('#iButton').addClass("disabled");
          $('#iButton').removeClass("btn-success");
          $('#sButton').addClass("disabled");
          $('#sButton').removeClass("btn-success");
      }
  }

  function sButtonClick() {
      if (preparation) {
          testSize = parseInt($('#itemText').css('font-size'));
          intro();
      }
  }

  function clearInput() {
      $('#itemAnswer').val('');
  }

  /*Pfeile fürs Input feld abstellen*/
  $('#itemAnswer').keydown(function(e){
      var key = e.charCode || e.keyCode;
      if (key == 37||key == 38||key == 39||key == 40||key == 32||key ==27) {
          // enter key do nothing
          e.preventDefault();
      }
      else {

      }
  });

  /*funktionen bei Tastendruck auf der Seite*/
  $(window).keyup(function(event) {
      if(currentIntroItem ==0) {
          iButtonClick();
      }
      else {
          if(endTest) {
              if(event.keyCode == 13) {
                  $(window).unbind('keyup');
                  window.clearTimeout(timeoutId);
                  $('#closeButton').click();
              }
              else {

              }
          }
          else if(event.keyCode == 27) {
              $(window).unbind('keyup');
              window.clearTimeout(timeoutId);
              $('#closeButton').click();
          }
          else if (preparation) {
              switch (event.keyCode) {
                  case 37:
                      cButtonClick();
                      break;
                  case 39:
                      iButtonClick();
                      break;
                  case 13:
                      sButtonClick();
                      break;
              }
          }
          else if((!preparation)&&introRdy) {
              switch (event.keyCode) {
                  case 13:
                      iButtonClick();
                      break;
                  case 37:
                      cButtonClick();
                      break;
                  case 32:
                      clearInput();
                      break;
              }
          }
          else {
              switch (event.keyCode) {
                  case 13:
                      iButtonClick();
                      break;
                  case 32:
                      clearInput();
                      break;
                  case 37:
                      cButtonClick();
                      break;
                  case 40:
                      sButtonClick();
                      break;
              }
          }
      }
  });

  //Audiodaten vorladen
  $('#itemText').css('font_size', 90).html('Daten werden vorbereitet');
  $('#itemAnswer').attr('type', 'hidden');
  $('#closeButton').hide();
  $('#sButton').hide();
  $('#iButton').hide();
  $('#cButton').hide();

  var progress = 0;
  var loaded = 0;
  var soundLength = studentData.length;
  var introAudioLength = introAudio.length;
//TODO könnte man alles vielleicht schicker machen, wenn die url der introaudiodatein auch in items stecken
  // we start preloading all the audio files
  for (var i in studentData) {
      preloadAudio(itemDataSound[studentData[i]]);

  }

  function preloadAudio(url) {
      var audio = new Audio();
      // once this file loads, it will call loadedAudio()
      // the file will be kept by the browser as cache
      var completeUrl = "/assets/".concat(url);
      audio.addEventListener('canplaythrough', loadedAudio, false);
      audio.src = completeUrl;


  }

  function loadedAudio() {
      // this will be called every time an audio file is loaded
      // we keep track of the loaded files vs the requested files

      loaded++;
      progress = ((loaded *100) / (soundLength+introAudioLength));
      var elem = document.getElementById("myBar");
      elem.style.width = progress +'%';
      if (loaded == soundLength){
          // all have loaded do something
          preloadIntro();

      }
  }
  // we start preloading all the audio files
  function preloadIntro() {
      for (var i in introAudio) {
          preloadAudioIntro(introAudio[i]);

      }
  }

  function preloadAudioIntro(url) {
      var audio = new Audio();
      // once this file loads, it will call loadedAudio()
      // the file will be kept by the browser as cache
      audio.addEventListener('canplaythrough', loadedAudioIntro, false);
      audio.src = url;


  }

  function loadedAudioIntro() {
      // this will be called every time an audio file is loaded
      // we keep track of the loaded files vs the requested files

      loaded++;
      progress = ((loaded *100) / (soundLength+introAudioLength));
      var elem = document.getElementById("myBar");
      elem.style.width = progress +'%';
      if (loaded == (soundLength+introAudioLength)){
          // all have loaded do something
          prepareTest();

      }
  }

</script>