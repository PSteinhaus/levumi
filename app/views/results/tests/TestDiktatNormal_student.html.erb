<!--
<div id="alert">
  <div class="alert alert-info alert-dismissible">
    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <p id="notice">Du hast hier die Gelegenheit, die Schriftgröße für den Test individuell anzupassen und die Lautstärke zu überprüfen.
      <br/> Die Zeit von < @measurement.assessment.test.time %> Sekunden läuft dann kurz nach dem Klick auf "Test starten" los!</p>
  </div>
</div>
nicht so gut da Schüler aus dem feld springen, wenn das drin sein soll close event abfangen-->
<nav class="navbar">
  <p class="navbar-brand"><%= "Klasse #{@measurement.assessment.group.name}: Schüler: #{@student.name}: #{@measurement.assessment.test.short_name} bis zum #{@measurement.date.to_date.strftime("%d.%m.%Y")}" %></p>
</nav>
<audio id="itemAudio"></audio>
</br>
<div align="center">
  <p style="font-family: 'fibel_nordregular'; font-size:96px" id="itemText" class="text-center">
    Test
  </p>
  <br/>
  <br/>
  <br/>
</div>
</br>
<div align="center">
  <p><input style="font-family: 'fibel_nordregular'; font-size:96px" id="itemAnswer" type="text" class="text-center" placeholder="Test" align="middle">
    <br/>
    <br/>
    <br/>
  </p>
</div>

<div align="center">
  <footer>
    <button id="cButton" type="button" class="btn btn-info btn-lg" onclick="cButtonClick()">Nochmal</button>
    <button id="sButton" type="button" class="btn btn-default disabled" onclick="sButtonClick()">Test starten</button>
    <button id="iButton" type="button" class="btn btn-success btn-lg" onclick="iButtonClick()">Weiter</button>
  </footer>
</div>
<br/>
<br/>
<div class="row">
  <div class="col-lg-12">
    <%= link_to url_for(controller: 'frontend') do%><button id="closeButton" type="button" class="btn btn-block btn-warning btn-lg" >Messung vorzeitig beenden</button><% end %>
  </div>
</div>

<script>
  /*Initialisierung der Variablen für den Testablauf*/
  var currentStudent = -1;
  var currentResult = "";
  currentStudent = <%=@result.id%>;
  var preparation = true;
  var currentItemIndex = -1;
  var timeoutId = -1;
  var currentTimes = "";
  var stopwatch = null;
  var introRdy = true;
  var currentIntroItem = -1;

  var testSize = 0;
  /*Liste aller Items, wleche zum Test gehören*/
  var itemData = {
  <% @measurement.assessment.test.items.each do |i| %>
  <%= i.id%>: "<%= i.itemtext%>",
  <%end %>
  };
  /*Liste aller Items, wleche zum Test gehören*/
  var itemDataSound = {
  <% @measurement.assessment.test.items.each do |i| %>
  <%= i.id%>: "<%= i.data%>",
  <%end %>
  };
  /*Liste der Ids, der Items in der Reihenfolge, wie sie in Result vorkommen*/
  var studentData = [
      <%@result.items.each do |i|%>
      <%=i%>,
      <%end%>];

  var introData = [
      "Hallo, ich bin Levumi. Heute möchte ich gerne wissen, wie gut du schon schreiben kannst." +
      " Einige Wörter sind leicht, andere Wörter sind schwer. Bitte konzentriere dich und schreibe so gut, wie du kannst!" +
      " Bitte drücke jetzt irgendeine Taste auf der Tastatur, damit du beginnen kannst.",
      "Jetzt machen wir zwei Beispiele, damit du weißt, was du aufschreiben sollst. Zuerst lese ich dir einen Satz vor." +
      " Danach diktiere ich dir das Wort aus dem Satz, welches du schreiben sollst. Dann schreibst du das Wort auf der Tastatur.",
      "Wenn du ein Wort falsch geschrieben hast, kannst du die Leertaste benutzen und die Buchstaben löschen," +
      " damit du das Wort noch einmal schreiben kannst. Wenn du das Wort nicht verstanden hast, drücke die Taste xy , dann lese" +
      " ich dir den Satz und das Wort vor, das du schreiben sollst vor. Achte ganz genau darauf, ob ein Wort groß oder klein geschrieben wird."

  ]
  /*was kann sollte noch vor Testbeginn gemacht/angezeigt werden
   * TODO: Bild und andere Kleinigkeiten. siehe auch Diktiertest*/
  function prepareTest() {
      $('#itemText').css('font-size', 96);
      $('#itemText').html("Test");
      $('#itemAnswer').val('');
      $('#itemAnswer').attr('maxlength',6);
      $('#itemAnswer').focus();
      var fileName = "/assets/Test.mp3";
      $("#itemAudio").attr("src",fileName).trigger('play');
      $('#cButton').html("Schrift  größer");
      $('#iButton').html("Schrift kleiner");
      setButtons(true);
  }
  function intro(){
      preparation = false;
      $('#itemText').css('font-size', 60);
      $('#itemText').html(introData[0]);
      $('#itemText').append('<img style="float: right; width: 250px " id="pic" src="/assets/Levumi-jubelt.gif"/>');
      $('#cButton').html("Nochmal anhören");
      $('#iButton').html("    Weiter     ");
      $('#itemAnswer').attr('type', 'hidden');
      introPhase();
  }
  function introPhase() {
      nextIntroItem();
  }
  function nextIntroItem() {
      currentIntroItem++;
      if(currentIntroItem<introData.length){
          $('#itemText').html(introData[currentIntroItem]);
      }
      else {
          startTest();
      }
  }

  /*Testphase beginnt*/
  function startTest() {
      introRdy = false;
      $('#itemText').css('font-size', testSize);
      setButtons(true);
      $('#itemAnswer').attr('type', 'show');
      currentItemIndex = -1;
      currentResult = "";
      currentTimes = "";
      nextItem();
      if (timeoutId != -1) {
          window.clearTimeout(timeoutId);
      }
      timeoutId = window.setTimeout(stopTest, <%= @measurement.assessment.test.time*1000 %> + 500, true);
  }
  /*Nächstes Item anzeigen und seine Daten laden*/
  function nextItem() {
      currentItemIndex++;
      if (currentItemIndex < studentData.length) {
          $('#itemText').html(itemData[studentData[currentItemIndex]]);
          var length = itemData[studentData[currentItemIndex]].length;
          $('#itemAnswer').attr('maxlength',(length+length/2));
          var fileName = "/assets/".concat(itemDataSound[studentData[currentItemIndex]]);
          $("#itemAudio").attr("src",fileName).trigger('play');
          stopwatch = new Date();
      }
      else
          stopTest(false);
  }
  /*Wenn Zeit abgelaufen oder alle Wörter durchgelaufen test beenden*/
  function stopTest(timeout) {
      if (timeoutId != -1) {
          window.clearTimeout(timeoutId);
          timeoutId = -1;
      }
      var dict = {};
      dict["authenticty_token"] = "<%= Rails.configuration.secret_token%>";
      dict["results"] = currentStudent + "#" + currentResult.substr(0, currentResult.length-1);
      $.ajax({
          type: "PUT",
          url: "<%= user_group_assessment_measurement_results_path(@student.group.user, @student.group, @measurement.assessment, @measurement)%>",
          data: dict
      });
      $('#itemText').html("");
      $('#itemAnswer').attr('type', 'hidden');
      if (timeout)
          $('#itemText').html("Deine Zeit ist leider abgelaufen.<br/>Die Testergebnisse wurden gespeichert! <br/>Du kannst das Testfenster jetzt schließen");
      else
          $('#itemText').html("Alle Items beantwortet.<br/>Die Testergebnisse wurden gespeichert!<br/>Sie können das Testfenster nun schließen.");
      setButtons(false);
  }



  function iButtonClick() {

      if (!$('#iButton').hasClass("disabled")) {
          if (preparation) {
              curSize = parseInt($('#itemText').css('font-size')) - 6;
              $('#itemText').css('font-size', curSize);
              $('#itemAnswer').css('font-size',curSize)
          }
          else if((!preparation)&&introRdy){
              introPhase();
          }
          /*Wenn Wörter abgefragt werden:
           - Wennh richtig eingegeben: - 1 Punkt dazu
           - Wenn falsch eingegeben  : - Keinen Punkt dazu
           Dann: - inputfeld leeren
           -nächstes Wort auswählen

           */
          else {
              var temp = document.getElementById("itemAnswer").value;
              if(itemData[studentData[currentItemIndex]]==temp){
                  stopwatch = new Date() - stopwatch;
                  currentTimes = currentTimes + stopwatch + ",";
                  currentResult = currentResult + "1,";
                  document.getElementById("itemAnswer").value = "";
                  nextItem();
                  $('#itemAnswer').focus();
              }
              else {
                  stopwatch = new Date() - stopwatch;
                  currentTimes = currentTimes + stopwatch + ",";
                  currentResult = currentResult + "0,";
                  document.getElementById("itemAnswer").value = "";
                  nextItem();
                  $('#itemAnswer').focus();
              }
          }
      }
  }

  function cButtonClick() {

      if (!$('#cButton').hasClass("disabled")) {
          if (preparation) {
              curSize=parseInt($('#itemText').css('font-size')) + 6;
              $('#itemText').css('font-size', curSize);
              $('#itemAnswer').css('font-size',curSize)
          }
          else {
              var h = document.getElementById("itemAudio");
              h.pause();
              h.currentTime = 0;
              h.play();
          }
      }
  }

  function setButtons(enabled) {
      if (enabled) {
          if (preparation) {
              $('#cButton').removeClass("disabled");
              $('#cButton').removeClass("btn-info");
              $('#sButton').removeClass("disabled");
              $('#sButton').addClass("btn-success");
              $('#iButton').removeClass("disabled");
              $('#iButton').removeClass("btn-success");
          }
          else {
              $('#cButton').removeClass("disabled");
              $('#cButton').addClass("btn-info");
              $('#iButton').removeClass("disabled");
              $('#iButton').addClass("btn-success");
              $('#sButton').addClass("disabled");
              $('#sButton').removeClass("btn-success");
          }
      }
      else {
          $('#cButton').addClass("disabled");
          $('#cButton').removeClass("btn-info");
          $('#iButton').addClass("disabled");
          $('#iButton').removeClass("btn-success");
          $('#sButton').addClass("disabled");
          $('#sButton').removeClass("btn-success");
      }
  }

  function sButtonClick() {
      if (preparation) {
          testSize = parseInt($('#itemText').css('font-size'));
          intro();
      }
  }

  function clearInput() {
      $('#itemAnswer').val('');
  }
  /*Befehle/Funktionen die direkt ausgeführt werden, ohne Funktionsaufruf*/
  $(window).onload = prepareTest();

  /*Pfeile fürs Input feld abstellen*/
  $('#itemAnswer').keydown(function(e){
      var key = e.charCode || e.keyCode;
      if (key == 37||key == 38||key == 39||key == 40||key == 32) {
          // enter key do nothing
          e.preventDefault();
      }
      else {

      }
  });

  /*funktionen bei Tastendruck auf der Seite*/
  $(window).keyup(function(event) {
      if (preparation) {
          switch (event.keyCode) {
              case 37:
                  cButtonClick();
                  break;
              case 39:
                  iButtonClick();
                  break;
              case 13:
                  sButtonClick();
                  break;
          }
      }
      else if((!preparation)&&introRdy) {
          iButtonClick();
      }
      else {
          switch (event.keyCode) {
              case 13:
                  iButtonClick();
                  break;
              case 32:
                  clearInput();
                  break;
              case 37:
                  cButtonClick();
                  break;
              case 38:
                  rButtonClick();
                  break;
              case 39:
                  iButtonClick();
                  break;
              case 40:
                  sButtonClick();
                  break;
          }
      }

  });
</script>