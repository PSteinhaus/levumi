<!-- Test-Styles einbinden -->
<style>
  <% @test.style_files.each do |f| %>
  <%= raw f.download.force_encoding('UTF-8') %>
  <% end %>
</style>

<!-- Hauptseite rendern -->
<%= raw @test.entry_point.download.force_encoding('UTF-8') %>

<!-- Testskripte laden und Testumgebung definieren -->
<script>
    //Medienpfade für Test bekannt machen (aus ActiveStorage)
    var media_paths = {
        <% @test.media_files.each do |f| %>
        '<%= f.filename %>': '<%= rails_blob_path(f) %>',
        <% end %>
    }

    //Vorheriges Ergebnis als Objekt
    <% if @result.prior_result.nil? %>
    const lastResult = JSON.parse("<%= escape_javascript(raw @result.prior_result.results.to_json) %>");
    <% else %>
    const lastResult = undefined
    <% end %>

    //Präferenzen des Kindes setzen
    const font_family = '<%= @result.student.get_setting(:font_family) %>';
    const font_size = '<%= @result.student.get_setting(:font_size) %>';

        //Funktionen für Testumgebung bereitstellen
        function saveResults(result, data) {
            fetch('<%= student_result_url(@student, @result) %>', {
                method: 'put',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'X-Requested-With': 'XMLHttpRequest',
                    'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
                },
                credentials: 'include',
                body: 'results=' + encodeURIComponent(JSON.stringify(result)) + '&data=' + encodeURIComponent(JSON.stringify(data))
            })
        }

    //Testfenster schließen
    function exit() {
        window.location.href = '<%= @redirect %>';
    }

    //Hilfsfunktionen

    //Zeitmessen
    var stopwatch = null;

    function startTimer() {
        stopwatch = new Date();
    }

    function stopTimer() {
        return (new Date() - stopwatch);
    }

    //zufälliges Umsortieren
    function shuffleArray(array) {
       let j = undefined;
        for (let i = array.length - 1; i > 0; i--) {
            j = Math.floor(Math.random() * (i + 1))
            [array[i], array[j]] = [array[j], array[i]]
        }
    }

    //Test-Skripte einbinden
    <% @test.script_files.each do |f| %>
    <%= raw f.download.force_encoding('UTF-8') %>
    <% end %>


    //Anzeigen des Feedbacks
    //Erhält zum einen, wie das Ergebnis aufgefasst wird (-1(schlechter), 0(gleich/erstes mal), 1(besser))
    function showFeedback(result, timedout) {
        $('#testspace').html(
            "<div style='text-align: center'>" +
            "<img id='pic' style='width: 300px'/>" +
            "<p style=\"font-family: '" + font_family + "'; font-size:" + 2*font_size + "em; margin-top: 10%\" id='feedback_text' class='text-center'></p>" +
            "</div>"
        )
        if (result == 0) {
            $('#pic').attr('src', '/images/shared/Levumi-normal.jpg');
        }
        else if (result == 1) {
            $('#pic').attr('src', '/images/shared/Levumi-jubelt.gif');
        }
        else {
            $('#pic').attr('src', '/images/shared/Levumi-liest.gif');
        }
        if (timedout)
            $('#feedback_text').html('Zeit abgelaufen.<br/>Die Testergebnisse wurden gespeichert!<br/>Sie können das Testfenster' +
                ' nun schließen.<br/><br/><button class="btn btn-warning btn-lg " onclick="exit()">Fenster schließen!</button>')
                .css('margin-top','0%');
        else
            $('#feedback_text').html('Alle Items beantwortet.<br/>Die Testergebnisse wurden gespeichert!<br/>Sie können' +
                ' das Testfenster nun schließen.<br/><br/><button class="btn btn-warning btn-lg " onclick="exit()">Fenster schließen!</button>')
                .css('margin-top','0%');
    }

    //Vorzeitiges Laden von Audiodateien
    //benötigt eine Funktion hasLoadedAudio
    function preloadAudio(url) {
        let audio = new Audio();
        // once this file loads, it will call loadedAudio()
        // the file will be kept by the browser as cache
        if(url =="") {
            hasLoadedAudio()
        }
        else {
            audio.addEventListener('canplaythrough', hasLoadedAudio, false);
            audio.src = url;
        }
    }
</script>