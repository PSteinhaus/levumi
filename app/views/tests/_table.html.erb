<table class='table table-hover table-sm text-small'>
  <thead class='thead-light'>
  <tr>
    <th scope='col'>ID</th>
    <th scope='col'>Kurzbezeichnung</th>
    <th scope='col'>Bereich</th>
    <th scope='col'>Kompetenz</th>
    <th scope='col'>Testfamilie</th>
    <th scope='col'>Niveaustufe</th>
    <% unless export %>
      <th scope='col'>Version</th>
      <th scope='col'>Archiv</th>
    <% end %>
      <th scope='col'>Aktionen</th>
  </tr>
  </thead>
  <tbody>
  <% Test.all.sort_by{ |t| [t.test_family.competence.area.id, t.test_family.competence.id, t.test_family.id, t.shorthand, t.version,] }.each do |test| %>
    <tr id='row_<%= test.id %>' <% if test.archive %>class='text-secondary'<% end %>>
      <th scope='row_'><%= test.id %></th>
      <td><%= test.shorthand %></td>
      <td><%= test.test_family.competence.area.name %></td>
      <td><%= test.test_family.competence.name %></td>
      <td><%= test.test_family.name %></td>
      <td><%= test.level %></td>
      <% unless export %>
        <td><%= test.version %></td>
        <td><%= test.archive ? 'Ja' : '' %></td>
        <td>
          <div id='test_description_<%= test.id %>' hidden='true'>
            <p class="text-light bg-secondary text-small">Kurzbeschreibung</p>
            <p class='short-description'>
              <%= raw test.description['short'] %>
            </p>
            <p class="text-light bg-secondary">Ausführliche Beschreibung</p>
            <p>
              <%= render test %>
            </p>
          </div>
          <button class='edit-test btn btn-sm btn-outline-success' data-id=<%= test.id %>><i class='fas fa-edit'></i> Bearbeiten</button>
          <button class='show-test btn btn-sm btn-outline-primary' data-id=<%= test.id %>><i class='fas fa-search'></i> Beschreibung</button>
          <button data-id=<%= test.id %> data-toggle="modal" data-target='#deleteModal' class='delete-test btn btn-sm btn-outline-danger'><i class='fas fa-trash'></i> Löschen</button>

        </td>
      <% else %>
        <td>
          <%= link_to test_path(test) do %><button class='btn btn-sm btn-outline-primary' <% unless test.has_results %>disabled<% end %>><i class='fas fa-save'></i> Exportieren</button><% end %>
        </td>
      <% end %>
    </tr>
  <% end %>
  </tbody>
</table>
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="deleteModalLabel">Test löschen</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Schließen">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        Test mit allen Messungen löschen! Sind Sie sicher?
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Schließen</button>
        <button id="confirm-delete-button" type="button" class="btn btn-primary">Ja, löschen</button>
      </div>
    </div>
  </div>
</div>


<script type="module">

  // show test description
  $(".show-test").each(function(){
    $(this).on("click", function(){
      const id = $(this).attr("data-id")
      $('#modal-body').html($('#test_description_' + id).html())
      $('#modal').modal('show')
    })
  })

  // store id of test to be deleted when delete modal is opened
  let testId = undefined
  $(".delete-test").each(function(){
    $(this).on("click", function(){
      const id = $(this).attr("data-id")
      testId = id
    })
  })

  // confirm deletion in modal: send request
  $("#confirm-delete-button").on("click", async ()=>{
    const res = await fetch("/tests/" + testId, { method: "delete",  headers: {
      'X-Requested-With': 'XMLHttpRequest',
      'X-CSRF-Token': document.getElementsByName('csrf-token')[0].getAttribute('content'),
    }})
    if (res.status === 200){
      $("#row_" + testId).remove()
      testId = undefined
    }
    $('#deleteModal').modal('hide')
  })

  // edit test
  $(".edit-test").each(function(){
    $(this).on("click", async function(){
      const id = $(this).attr("data-id")
      $('#modal-body').html("<%= escape_javascript(render 'form_edit') %>")

      // short and full description are already rendered hidden per table row for the description dialog
      const full = $(`#test_description_${id} .full-description`).html().trim()
      const short = $(`#test_description_${id} .short-description`).html().trim()

      // write descriptions into edit form
      $('#description').val(full)
      $('#short_description').val(short)
      $('#modal').modal('show')

      // send request
      $('#update-test').on('click', async ()=>{
        const res = await fetch(`/tests/${id}`,
          { method: "put",
            headers: {
              'X-Requested-With': 'XMLHttpRequest',
              'X-CSRF-Token': document.getElementsByName('csrf-token')[0].getAttribute('content'),
              'Content-Type': "application/json",
              'Accept': "application/json"
            },
            body: JSON.stringify({test: {description: {full: $('#description').val(), short: $('#short_description').val()}}})
          }
        )
        // if successful, update hidden fields
        if (res.status === 200) {
          const data = await res.json()
          $(`#test_description_${id} .full-description`).html(data.test.full_description)
          $(`#test_description_${id} .short-description`).html(data.test.short_description)
        }
        $('#modal').modal('hide')
      })


    })
  })

</script>