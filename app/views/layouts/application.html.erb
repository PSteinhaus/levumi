<!DOCTYPE html>
<html>
  <head>
    <%= render 'layouts/header' %>

    <!-- sonstige Libaries -->
    <script src='/javascript/sjcl.js'></script>

    <!-- Style für Spinner - TODO: evtl. besser woanders? -->
    <style>
      .spinner {
        margin: 100px auto 0;
        width: 70px;
        text-align: center;
      }

      .spinner > div {
        width: 18px;
        height: 18px;
        background-color: #333;

        border-radius: 100%;
        display: inline-block;
        -webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both;
        animation: sk-bouncedelay 1.4s infinite ease-in-out both;
      }

      .spinner .bounce1 {
        -webkit-animation-delay: -0.32s;
        animation-delay: -0.32s;
      }

      .spinner .bounce2 {
        -webkit-animation-delay: -0.16s;
        animation-delay: -0.16s;
      }

      @-webkit-keyframes sk-bouncedelay {
        0%, 80%, 100% { -webkit-transform: scale(0) }
        40% { -webkit-transform: scale(1.0) }
      }

      @keyframes sk-bouncedelay {
        0%, 80%, 100% {
          -webkit-transform: scale(0);
          transform: scale(0);
        } 40% {
            -webkit-transform: scale(1.0);
            transform: scale(1.0);
          }
      }
      [v-cloak] {display: none}
    </style>

    <script>
        //TODO: woanders?
        <%
          #Schülernamen verfügbar machen
          groups = {}
          @login.students.each do |s|
            groups[s.group_id] ||= []
            groups[s.group_id] += [s]
          end
       %>

      groups = JSON.parse("<%= escape_javascript(raw groups.to_json)%>");

      //Entschlüsselt einen String mit dem im sessionStorage gespeicherten Key.
      // Falls die Entschlüsselung fehlschlägt, wird der Wert von alt zurückgegeben.
      function decrypt(text, alt) {
          let res = "";
          try{
              res = sjcl.decrypt(sessionStorage['login'], text);
          }
          catch(e){
              console.error(e.toString());
              console.log('Entschlüsselung fehlgeschlagen'); //Log-Output (evtl. nicht in Production?)
              res = alt;
          }
          return res;
      }

      //Verschlüsselt einen String mit dem im sessionStorage gespeicherten Key.
      function encrypt(text) {
          return sjcl.encrypt(sessionStorage['login'], text);
      }

      //Liefert das Student-Objekt zu einer ID in dessen Gruppe zurück.
      function get_student(group, id) {
          for (let j = 0; j < groups[group].length; ++j)
              if (groups[group][j].id == id)
                  return groups[group][j];
          return null;
      }

      //Namen der Schüler entschlüsseln, evtl. nicht bei jedem Reload?
      Object.keys(groups).forEach(function(key, index) {
          for (let i = 0; i < this[key].length; ++i)
              this[key][i].name = decrypt(this[key][i].name, 'Kind_' + this[key][i].id);
          }, groups);

    </script>

  </head>

  <body>

  <%= render 'layouts/navbar' %>

  <%= yield %>

  <!-- Platz für Dialoge etc -->
  <div id='modal' class='modal fade' tabindex='-1'>
    <div class='modal-dialog'>
      <div class='modal-content'>
        <div class='modal-body' id='modal-body'>
        </div>
      </div>
    </div>
  </div>

  </body>
</html>
